worker_processes 1;

error_log  /dev/stderr debug;

pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {

    upstream lemmy {
        # this needs to map to the lemmy (server) docker service hostname
        server "lemmy-test.up.railway.app";
    }
    upstream lemmyui {
        # this needs to map to the lemmy-ui docker service hostname
        server "lemmyui-test.up.railway.app";
    }

    log_format  verbose  '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '"$request_body" "$bytes_sent"';
                         
    access_log  /dev/stdout verbose;
  
    server {
        listen 80;
        server_name _;

          # frontend general requests
        location / {
            # distinguish between ui requests and backend
            # don't change lemmy-ui or lemmy here, they refer to the upstream definitions on top
            set $proxpass "http://lemmyui";

            if ($http_accept = "application/activity+json") {
              set $proxpass "http://lemmy";
            }
            if ($http_accept = "application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"") {
              set $proxpass "http://lemmy";
            }
            if ($request_method = POST) {
              set $proxpass "http://lemmy";
            }
            proxy_pass $proxpass;

            rewrite ^/(.+)/+$ /$1 permanent;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Nginx-Proxy true;
            proxy_http_version 1.1;
            # Add these debug headers to check responses
            add_header X-Upstream-Status $upstream_status always;
            add_header X-Upstream-Response-Time $upstream_response_time always;
        }

        location ~ ^/(api|pictrs|feeds|nodeinfo|version|.well-known) {
            proxy_pass "http://lemmy";

            # Send actual client IP upstream
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Nginx-Proxy true;
            proxy_http_version 1.1;
            # Add these debug headers to check responses
            add_header X-Upstream-Status $upstream_status always;
            add_header X-Upstream-Response-Time $upstream_response_time always;
        }
    }
}